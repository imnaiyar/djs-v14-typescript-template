{
  "compilerOptions": {
    /* Language and Environment */
    "target": "ESNext" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,

    /* Modules */
    "module": "ESNext" /* Specify what module code is generated. */,
    "resolveJsonModule": true /* Enable importing .json files. */,
    "allowSyntheticDefaultImports": true,

    /* JavaScript Support */
    "allowJs": true /* Allow JavaScript files to be a part of your program. Use the 'checkJS' option to get errors from these files. */,
    "checkJs": true /* Enable error reporting in type-checked JavaScript files. */,

    /* Emit */
    "sourceMap": false /* Create source map files for emitted JavaScript files. */,
    "outDir": "dist" /* Specify an output folder for all emitted files. */,
    "removeComments": false /* Disable emitting comments. */,

    /* Type Checking */
    "strict": true /* Enable all strict type-checking options. */,
    "noImplicitAny": true /* Enable error reporting for expressions and declarations with an implied 'any' type. */,
    "alwaysStrict": true /* Ensure 'use strict' is always emitted. */,
    "noUnusedLocals": true /* Enable error reporting when local variables aren't read. */,
    "noUnusedParameters": true /* Raise an error when a function parameter isn't read. */,
    "moduleResolution": "Node",
    /* Completeness */
    "skipLibCheck": true /* Skip type checking all .d.ts files. */,
    "paths": {
      "#handlers": ["./src/handlers/index"],
      "#handlers/*": ["./src/handlers/*"],
      "#src/*": ["./src/*"],
      "#commands/*": ["./src/commands/*"],
      "#root/*": ["./*"],
      "#schemas/*": ["./src/database/schemas/*"],
      "#structures/*": ["./src/structures/*"],
      "#structures": ["./src/structures/index"],
      "#libs/*": ["./src/libs/*"],
      "#libs": ["./src/libs/index"],
      "#functions/*": ["./src/functions/*"],
      "#functions": ["./src/functions/index"]
    }
  },
  "include": ["src/**/*"],
  "exclude": ["node_modules/**", "dist/**"]
}
